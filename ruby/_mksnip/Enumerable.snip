---instance-method--
all? { |e| block }
any? { |e| block }
chunk { |e| block }
collect { |e| block }
collect_concat { |e| block }
count
count(obj)
count { |e| block }
cycle(num) { |e| block }
detect { |e| block }
drop(num)
drop_while { |ary| block }
each_cons(num) { |ary| block }
each_entry { |e| block }
each_slice(num) { |ary| block }
each_with_index { |e, i| block }
each_with_object { |args, memo| block }
entries
find { |item| block }
find_all { |e| block }
find_index(value)
find_index { |item| block }
first
first(num)
flat_map { |e| block }
flat_map
grep(pattern)
grep(pattern) { |obj| block }
group_by { |e| block }
include?(obj)
inject(init, method_sym)
inject(method_sym)
inject(init) { |memo, e| block }
inject { |memo, e| block }
lazy
map { |e| block }
max { |a, b| block }
max
max(num) { |a, b| block }
max(num)
max_by { |e| block }
max_by(num) { |e| block }
member?(obj)
min { |a, b| block }
min
min(num) { |a, b| block }
min(num)
min_by { |e| block }
min_by(num) { |e| block }
minmax
minmax { |a, b| block }
minmax_by { |e| block }
none? { |e| block }
one? { |e| block }
partition { |e| block }
reduce(init, method_sym)
reduce(method_sym)
reduce(init) { |memo, e| block }
reduce { |memo, e| block }
reject { |e| block }
reverse_each { |e| block }
select { |e| block }
alice_after(pattern)
alice_after { |e| block }
slice_before(pattern)
slice_before { |e| block }
slice_when { |before, after| block }
sort
sort { |a, b| block }
sort_by { |obj| block }
take(num)
take_while { |ary| block }
zip(args)
zip(args) { |ary| block }
---EOF---












