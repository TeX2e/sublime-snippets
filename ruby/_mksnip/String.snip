---class-method---
# new(str)
# try_convert(obj)
---instance-method--
ascii_only?
bytes
bytesize
byteslice(int)
byteslice(int, int)
byteslice(range) 
capitalize
capitalize!
casecmp(other_str)
center(width)
chars
chomp
chomp!
chop
chop!
chr
# clear
codepoints { |int| block }
concat(obj)
count(str)
crypt(salt_str)
delete(str)
delete!(str)
downcase
downcase!
dump
each_byte { |int| block }
each_char { |char| block }
each_codepoint { |int| block }
each_line { |line| block }
empty?
encode(encoding)
encode!(encoding)
end_with?(str)
force_encoding(encoding)
getbyte(index)
gsub(pattern, replace)
gsub(pattern) { |match| block }
gsub!(pattern, replace)
gsub!(pattern) { |match| block }
# include?(obj)
index(substr, offset=0)
index(regexp, offset=0)
insert(index, other_str)
intern
length
lines
ljust(width)
lstrip
lstrip!
match(pattern)
next
next!
# oct
# ord
partition(sep)
partition(regexp)
prepend(other_str)
replace(other_str)
reverse
reverse!
rindex(substr, offset=0)
rindex(regexp, offset=0)
rjust(width)
rpartition(sep)
rpartition(regexp)
rstrip
rstrip!
scan(pattern)
scan(pattern) { |match| block }
scrub(replace)
scrub!(replace)
setbyte(index, int)
size
# slice(index)
# slice(start, length)
# slice(range)
# slice(regexp)
# slice(regexp, capture)
# slice(match_str)
# slice!(index)
# slice!(start, length)
# slice!(range)
# slice!(regexp)
# slice!(other_str)
split(str)
split(regexp)
squeeze
squeeze(str)
squeeze!
squeeze!(str)
start_with?(str)
strip
strip!
sub(pattern, replace)
sub(pattern) { |match| block }
sub!(pattern, replace)
sub!(pattern) { |match| block }
succ
succ!
sum(n=16)
swapcase
swapcase!
tr(from_str, to_str)
tr!(from_str, to_str)
tr_s(from_str, to_str)
tr_s!(from_str, to_str)
unpack(format)
upcase
upcase!
upto(other_str) { |str| block }
valid_encoding?
---EOF---


